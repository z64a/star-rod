rec {
  description = "Paper Mario (N64) asset editor";
  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-24.05";
    gradle-dot-nix.url = "github:CrazyChaoz/gradle-dot-nix";
  };
  outputs = { nixpkgs, gradle-dot-nix, ... }:
    let
      javaVersion = 17;
      supportedSystems = [ "x86_64-linux" "x86_64-darwin" ]; # TODO: fix arm
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
    in {
      devShells = forEachSupportedSystem ({ pkgs }: let
        jdk = pkgs."jdk${toString javaVersion}";
        gradle = pkgs.gradle.override { java = jdk; };
        lombok = pkgs.lombok.override { inherit jdk; };
      in {
        default = pkgs.mkShell {
          packages = [
            gradle
            jdk
          ];
          shellHook =
            let
              loadLombok = "-javaagent:${lombok}/share/java/lombok.jar";
              prev = "\${JAVA_TOOL_OPTIONS:+ $JAVA_TOOL_OPTIONS}";
            in
            ''
              export JAVA_TOOL_OPTIONS="${loadLombok}${prev}"
            '';
        };
      });
      packages = forEachSupportedSystem ({ pkgs }: 
        let
          gradle-init-script = (import gradle-dot-nix {
            inherit pkgs;
            gradle-verification-metadata-file = ./gradle/verification-metadata.xml; # generated by `gradle -M sha256 createReleaseZip`
          }).gradle-init;
          pname = "star-rod";
          desktopItem = pkgs.makeDesktopItem {
            name = pname;
            desktopName = "Star Rod";
            exec = pname;
            comment = description;
            type = "Application";
            categories = [ "Development" "3DGraphics" "Java" ];
            keywords = [ "Paper Mario" "Nintendo 64" "ROM Hacking" "Modding" ];
            icon = "star-rod";
            terminal = false;
            startupWMClass = "app-StarRodMain";
          };
        in {
          default = pkgs.stdenv.mkDerivation rec {
            inherit pname;
            version = "0.9.2";
            src = ./.;
            nativeBuildInputs = let
              jdk = pkgs."jdk${toString javaVersion}";
              gradle = pkgs.gradle.override { java = jdk; };
            in [
              pkgs.makeWrapper
              pkgs.unzip

              gradle
              jdk
            ];
            buildPhase = ''
              gradle createReleaseZip --info -I ${gradle-init-script} --offline --full-stacktrace
            '';
            installPhase = ''
              unzip -d $out build/release/StarRod.zip
              rm $out/StarRod.bat

              mkdir -p $out/share/java
              mv $out/StarRod.jar $out/share/java

              mkdir -p $out/bin
              makeWrapper ${pkgs.jre}/bin/java $out/bin/${pname} \
                --add-flags "-cp $out/share/java/StarRod.jar app.StarRodMain"

              # TODO: icon
              #install -Dm444 logo_512.png $out/share/icons/hicolor/512x512/apps/${pname}.png
              install -Dm444 -t $out/share/applications ${desktopItem}/share/applications/*

              # TODO: database should be writeable, as should cfg. so move to /etc/ and XDG_CONFIG_HOME respectively
              #mkdir -p $out/etc/${pname}
              #mv $out/database $out/etc/${pname}
              mv $out/database $out/share/java      # terrible
            '';
            meta = with pkgs.lib; {
              homepage = "https://github.com/z64a/star-rod";
              inherit description;
              mainProgram = pname;
              license = licenses.mit;
              platforms = supportedSystems;
            };
          };
      });
    };
}
